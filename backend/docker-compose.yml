services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservices-net

  auth-db:
    image: postgres:13
    container_name: auth-db
    ports:
      - "${AUTH_DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${AUTH_DB_NAME}
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - microservices-net

  user-db:
    image: postgres:13
    container_name: user-db
    ports:
      - "${USER_DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${USER_DB_NAME}
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - microservices-net

  auth-service:
    build:
      context: ./auth-service
    env_file:
      - ./auth-service/.env
    ports:
      - "4001:4001"
    depends_on:
      - auth-db
      - rabbitmq
    networks:
      - microservices-net

  user-service:
    build:
      context: ./user-service
    env_file:
      - ./user-service/.env
    ports:
      - "4002:4002"
    depends_on:
      - user-db
      - rabbitmq
    networks:
      - microservices-net

  gateway-service:
    build:
      context: ../gateway
    ports:
      - "4000:4000"
    environment:
      PORT: 4000
      AUTH_SERVICE_URL: http://auth-service:4001
      USER_SERVICE_URL: http://user-service:4002
      FRONTEND_ORIGIN: http://localhost:5173
    depends_on:
      - auth-service
      - user-service
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  auth-db-data:
  user-db-data:
